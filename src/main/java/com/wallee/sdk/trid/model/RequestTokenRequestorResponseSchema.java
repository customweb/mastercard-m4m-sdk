/*
 * Token Requestor ID API
 * An API that allows On-behalf of Token Requestors such as Payment Service Providers to bulk request TRIDs for their merchants.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wallee.sdk.trid.model;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * RequestTokenRequestorResponseSchema
 */

public class RequestTokenRequestorResponseSchema {
  @SerializedName("responseId")
  private String responseId = null;

  public RequestTokenRequestorResponseSchema responseId(String responseId) {
    this.responseId = responseId;
    return this;
  }

   /**
   * __REQUIRED__&lt;br&gt; Unique identifier for the response.
   * @return responseId
  **/
  public String getResponseId() {
    return responseId;
  }

  public void setResponseId(String responseId) {
    this.responseId = responseId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestTokenRequestorResponseSchema requestTokenRequestorResponseSchema = (RequestTokenRequestorResponseSchema) o;
    return Objects.equals(this.responseId, requestTokenRequestorResponseSchema.responseId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(responseId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestTokenRequestorResponseSchema {\n");
    
    sb.append("    responseId: ").append(toIndentedString(responseId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

