/*
 * Token Requestor ID API
 * An API that allows On-behalf of Token Requestors such as Payment Service Providers to bulk request TRIDs for their merchants.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.wallee.sdk.trid.model;

import com.google.gson.annotations.SerializedName;
import java.util.Objects;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * TokenRequestorAssignmentErrors
 */

public class TokenRequestorAssignmentErrors {
  @SerializedName("entityId")
  private String entityId = null;

  @SerializedName("source")
  private String source = null;

  @SerializedName("reasonCode")
  private String reasonCode = null;

  @SerializedName("description")
  private String description = null;

  public TokenRequestorAssignmentErrors entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * __REQUIRED__&lt;br&gt; Identifier for the entity for whom a Token Requestor ID was requested. Only alpha-numeric characters [a-zA-Z0-9].
   * @return entityId
  **/
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public TokenRequestorAssignmentErrors source(String source) {
    this.source = source;
    return this;
  }

   /**
   * __REQUIRED__&lt;br&gt; An element used to indicate the source of the issue causing this error. Must be one of, * INPUT - Service inputs triggered an error. * MDES - MDES reported an error.
   * @return source
  **/
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public TokenRequestorAssignmentErrors reasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * __REQUIRED__&lt;br&gt; A reason code for the error that has occurred. See Error Reason Code definitions for the appropriate API service.
   * @return reasonCode
  **/
  public String getReasonCode() {
    return reasonCode;
  }

  public void setReasonCode(String reasonCode) {
    this.reasonCode = reasonCode;
  }

  public TokenRequestorAssignmentErrors description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the reason the operation failed.
   * @return description
  **/
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TokenRequestorAssignmentErrors tokenRequestorAssignmentErrors = (TokenRequestorAssignmentErrors) o;
    return Objects.equals(this.entityId, tokenRequestorAssignmentErrors.entityId) &&
        Objects.equals(this.source, tokenRequestorAssignmentErrors.source) &&
        Objects.equals(this.reasonCode, tokenRequestorAssignmentErrors.reasonCode) &&
        Objects.equals(this.description, tokenRequestorAssignmentErrors.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, source, reasonCode, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TokenRequestorAssignmentErrors {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

